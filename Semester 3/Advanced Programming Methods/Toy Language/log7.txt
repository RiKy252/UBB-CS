Stack:
Ref (int) v;
new(v, 20);
Ref (Ref (int)) a;
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
Out:
File table:
Heap:


Stack:
Ref (int) v
new(v, 20);
Ref (Ref (int)) a;
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
Out:
File table:
Heap:


Stack:
new(v, 20);
Ref (Ref (int)) a;
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
v->(0, int)
Out:
File table:
Heap:


Stack:
new(v, 20)
Ref (Ref (int)) a;
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
v->(0, int)
Out:
File table:
Heap:


Stack:
Ref (Ref (int)) a;
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
v->(1, int)
Out:
File table:
Heap:
1->20


Stack:
Ref (Ref (int)) a
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
v->(1, int)
Out:
File table:
Heap:
1->20


Stack:
new(a, v);
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
a->(0, Ref (int))
v->(1, int)
Out:
File table:
Heap:
1->20


Stack:
new(a, v)
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
a->(0, Ref (int))
v->(1, int)
Out:
File table:
Heap:
1->20


Stack:
print(readHeap(v));
print(readHeap(readHeap(a)) + 5)
Symbolic table:
a->(2, Ref (int))
v->(1, int)
Out:
File table:
Heap:
1->20
2->(1, int)


Stack:
print(readHeap(v))
print(readHeap(readHeap(a)) + 5)
Symbolic table:
a->(2, Ref (int))
v->(1, int)
Out:
File table:
Heap:
1->20
2->(1, int)


Stack:
print(readHeap(readHeap(a)) + 5)
Symbolic table:
a->(2, Ref (int))
v->(1, int)
Out:
20
File table:
Heap:
1->20
2->(1, int)


Stack:

Symbolic table:
a->(2, Ref (int))
v->(1, int)
Out:
20
25
File table:
Heap:
1->20
2->(1, int)


