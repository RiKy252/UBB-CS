;( defun f ( l1 l2 )
;  ( append (f (car l1) l2)
;  (cond
;   ( (null l1) (cdr l2) )
;   ( t         (list (f (car l1) l2) (car l2)) )
;  ))
;)
; rewrite without double recursive call

( defun fct ( l1 l2 )
  (let ((result (fct (car l1) l2)))
    ( append result
	(cond
	  ( (null l1) (cdr l2) )
	  ( t (list result (car l2)) )
	 ) )
   )
)

