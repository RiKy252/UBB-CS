@model IEnumerable<VacationAppNET.Models.Destination>

@{
    ViewData["Title"] = "Destinations";
}

<div class="container">
    <h2 class="mb-4">Destinations</h2>
    <div class="row mb-3">
        <div class="col-md-6">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Search destinations...">
                <button class="btn btn-primary" type="button" onclick="searchDestinations()">Search</button>
            </div>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Create" class="btn btn-success">Add New Destination</a>
        </div>
    </div>
    <div id="destinationsList">
        @if (!Model.Any())
        {
            <div class="alert alert-info">No destinations found.</div>
        }
        else
        {
            <div class="row">
                @foreach (var item in Model)
                {
                    <div class="col-md-4 mb-4 destination-card">
                        <div class="card">
                            <div class="card-body">
                                <h5 class="card-title">@item.City, @item.Country</h5>
                                <p class="card-text">@item.Description</p>
                                <p class="card-text"><strong>Tourist Attractions:</strong> @item.TouristAttractions</p>
                                <p class="card-text"><strong>Cost per Day:</strong> $@item.Cost_per_day</p>
                                <div>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-primary me-2">Edit</a>
                                    <button class="btn btn-danger" onclick="deleteDestination(@item.Id)">Delete</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        function deleteDestination(id) {
            if (confirm('Are you sure you want to delete this destination?')) {
                fetch(`/DestinationsMvc/Delete/${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                }).then(response => {
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        alert('Failed to delete destination');
                    }
                });
            }
        }

        function searchDestinations() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const cards = document.querySelectorAll('.destination-card');
            
            cards.forEach(card => {
                const title = card.querySelector('.card-title').textContent.toLowerCase();
                const description = card.querySelector('.card-text').textContent.toLowerCase();
                const attractions = card.querySelectorAll('.card-text')[1].textContent.toLowerCase();
                
                if (title.includes(searchTerm) || description.includes(searchTerm) || attractions.includes(searchTerm)) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });
        }

        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchDestinations();
            }
        });
    </script>
} 